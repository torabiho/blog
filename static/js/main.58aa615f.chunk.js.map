{"version":3,"sources":["Nav.js","Home.js","Page2.js","Footer.js","App.js","reportWebVitals.js","i18n/config.js","index.js"],"names":["Nav","t","useTranslation","className","to","Home","state","nextUsername","username","e","this","setState","target","value","props","type","onChange","updateUsername","bind","onClick","setUsername","Trans","i18nKey","Component","withTranslation","useState","data","setData","useEffect","a","axios","process","result","fetchData","console","log","Footer","i18n","changeLanguage","App","exact","path","component","Page2","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","use","LanguageDetector","initReactI18next","init","fallbackLng","detection","order","lookupQuerystring","lookupCookie","lookupLocalStorage","caches","resources","en","translations","require","es","fa","react","bindI18n","useSuspense","ns","defaultNS","languages","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.58aa615f.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\nimport { useTranslation } from 'react-i18next';\n\nconst Nav = () => {\n  const { t } = useTranslation();\n\n  return <header className='nav'>\n    <div>i18n React Demo</div>\n    <div>\n      <Link to=\"/\">{t('home')}</Link>\n      <Link to=\"/page2\">{t('page2')}</Link>\n    </div>\n  </header>\n};\n\nexport default Nav;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Trans, withTranslation } from 'react-i18next';\n\nclass Home extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      nextUsername: '',\n      username: 'default user'\n    };\n  }\n\n  updateUsername(e) {\n    this.setState({\n      nextUsername: e.target.value\n    })\n  }\n\n  setUsername() {\n    this.setState({\n      username: this.state.nextUsername\n    })\n  }\n\n  render() {\n    const { t } = this.props;\n    const { username } = this.state;\n\n    return (\n      <div className='body'>\n        <p>{t('welcome', { username: username })}</p>\n\n        <div>\n          <label>{t('change-username')}</label>\n          <input type='text' onChange={this.updateUsername.bind(this)} />\n          <button onClick={this.setUsername.bind(this)}>{t('submit')}</button>\n        </div>\n\n        <p>\n          <Trans i18nKey='go-to-page2'>\n            <Link to='/page2'></Link>\n            {{username}}\n          </Trans>\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default withTranslation()(Home);","import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { Trans, withTranslation } from 'react-i18next';\n\nconst Page2 = () => {\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await axios(\n        `${process.env.REACT_APP_API_URL}/api/posts`,\n      );\n \n      setData(result.data);\n    };\n \n    fetchData();\n  }, [])\n\n  console.log(\"hossein\", data);\n  return (<div className='body'>\n    <p><Trans>this-is-page2</Trans></p>\n    <p>\n      <Trans i18nKey='go-to-home'>\n        <Link to='/'></Link>\n      </Trans>\n    </p>\n  </div>)\n};\n\nexport default withTranslation()(Page2);","import { useTranslation } from 'react-i18next';\n\nconst Footer = () => {\n  const { i18n } = useTranslation();\n\n  function changeLanguage(e) {\n    i18n.changeLanguage(e.target.value);\n  }\n\n  return(\n    <div className='footer'>\n      <button onClick={changeLanguage} value='en'>English</button>\n      <button onClick={changeLanguage} value='es'>Español</button>\n      <button onClick={changeLanguage} value='fa'>فارسی</button>\n    </div>\n  )\n}\n  \nexport default Footer","import { Switch, Route } from 'react-router-dom';\n\nimport Nav from './Nav';\nimport Home from './Home';\nimport Page2 from './Page2';\nimport Footer from './Footer';\n\nfunction App() {\n  return (\n    <div className='app'>\n      <Nav />\n      <Switch>\n        <Route exact path='blog.hosseintorabi.com' component={Home}/>\n        <Route exact path='blog.hosseintorabi.com/page2' component={Page2}/>\n      </Switch>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import i18n from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\n\nconst options = {\n  order: ['querystring', 'cookie', 'localStorage'],\n  lookupQuerystring: 'lng',\n  // next-i18next by default searches for the \"next-i18next\" cookie on server requests\n  lookupCookie: \"next-i18next\",\n  lookupLocalStorage: \"i18nextLng\",\n  caches: [\"cookie\", \"localStorage\"]\n}\n\ni18n\n.use(LanguageDetector)\n.use(initReactI18next)\n.init({\n  fallbackLng: 'en',\n  detection: options,\n  resources: {\n    en: {\n      translations: require('./locales/en/translations.json')\n    },\n    es: {\n      translations: require('./locales/es/translations.json')\n    },\n    fa: {\n      translations: require('./locales/fa/translations.json')\n    }\n  },\n  react: {\n    // trigger a rerender when language is changed\n    bindI18n: \"languageChanged\",\n    // we're NOT using suspsense to detect when the translations have loaded\n    useSuspense: false\n  },\n  ns: ['translations'],\n  defaultNS: 'translations'\n});\n\ni18n.languages = ['en', 'es', 'fa'];\n\nexport default i18n;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport './i18n/config';\nimport './index.css';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}